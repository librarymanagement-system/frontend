

  useEffect(() => {
    const fetchBooks = async () => {
      setLoading(true);
      try {
        const response = await api.get("/api/books/getAllBooks", {
          params: {
            page: 0,
            size: 15,
            sort: "id,asc",
          },
        });
        setBooks(response.data.content || []);
        setFilteredBooks(response.data.content || []);
      } catch (error) {
        console.error("Fetch books error:", error);
        setError("Kitaplar yüklenirken bir hata oluştu.");
      } finally {
        setLoading(false);
      }
    };

    fetchBooks();
  }, []);






















  
  const filterBooks = () => {
    const { title, author, publisher, genre } = filters;
    const filtered = books.filter((book) => {
      return (
        (title ? book.title.toLowerCase().includes(title.toLowerCase()) : true) &&
        (author ? (book.authors || []).some((a) =>
          `${a.firstName} ${a.lastName}`.toLowerCase().includes(author.toLowerCase())
        ) : true) &&
        (publisher ? (book.publishers || []).some((p) =>
          p.name.toLowerCase().includes(publisher.toLowerCase())
        ) : true) &&
        (genre ? (book.genres || []).some((g) =>
          g.name.toLowerCase().includes(genre.toLowerCase())
        ) : true)
      );
    });
    setFilteredBooks(filtered);
  };

  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilters((prevFilters) => ({
      ...prevFilters,
      [name]: value,
    }));
  };

  const handleViewBook = (bookId) => {
    window.location.href = `/books/${bookId}`;
  };



















  return (
    <div className="books-list-container">
      <h1>Tüm Kitaplar</h1>
      <div className="filter-section">
        <input
          type="text"
          name="title"
          value={filters.title}
          onChange={handleFilterChange}
          placeholder="Kitap Başlığı"
        />
        <input
          type="text"
          name="author"
          value={filters.author}
          onChange={handleFilterChange}
          placeholder="Yazar"
        />
        <input
          type="text"
          name="publisher"
          value={filters.publisher}
          onChange={handleFilterChange}
          placeholder="Yayın Evi"
        />
        <input
          type="text"
          name="genre"
          value={filters.genre}
          onChange={handleFilterChange}
          placeholder="Tür"
        />
        <button onClick={filterBooks}>Filtrele</button>
      </div>
      {loading ? (
        <p>Loading...</p>
      ) : error ? (
        <p>{error}</p>
      ) : (
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       <div className="books-grid">
          {filteredBooks.length > 0 ? (
            filteredBooks.map((book) => (
              <div key={book.id} className="book-card">
                <img
                  src={book.base64image ? `data:image/png;base64,${book.base64image}` : "/default-image.png"}
                  alt={book.title}
                  className="book-image"
                />
                <div className="book-details">
                  <h2>{book.title}</h2>
                  <p>Yazar: {(book.authors || []).map((a) => `${a.firstName} ${a.lastName}`).join(", ")}</p>
                  <p>Yayın Evi: {(book.publishers || []).map((p) => p.name).join(", ")}</p>
                  <p>Tür: {(book.genres || []).map((g) => g.name).join(", ")}</p>
                  <Link to={`/books/${book.id}`} className="view-btn">Detay</Link>
                </div>
              </div>
            ))
          ) : (
            <p>Kitap bulunamadı.</p>
          )}
        </div>
      )}
    </div>
  );
};

export default BooksListPage;
